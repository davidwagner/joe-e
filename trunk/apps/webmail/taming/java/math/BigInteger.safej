# Manually audited.  See comments on valueOf.
# Constructors from string use Unicode's mapping of characters to values, rather than ASCII 0-9
class("java.math.BigInteger",
  honorary("org.joe_e.Powerless", "org.joe_e.Selfless"),
  static(field("ONE"),
    field("TEN"),
    field("ZERO"),
    constructor("BigInteger(String)", comment("Unicode spec")),
    constructor("BigInteger(String, int)", comment("Unicode spec")),
    constructor("BigInteger(byte[])"),
    constructor("BigInteger(int, Random)", comment("OK because it takes an explicit pseudorandom generator")),
    constructor("BigInteger(int, byte[])"),
    constructor("BigInteger(int, int, Random)", comment("OK because it takes an explicit pseudorandom generator")),
    method("probablePrime(int, Random)", comment("OK because it takes an explicit pseudorandom generator")),
    method("valueOf(long)", comment("determinism may depend on Selflessness of BigIntegers"))),
  instance(method("abs()"),
    method("add(BigInteger)"),
    method("and(BigInteger)"),
    method("andNot(BigInteger)"),
    method("bitCount()"),
    method("bitLength()"),
    method("clearBit(int)"),
    method("compareTo(BigInteger)"),
    method("divide(BigInteger)"),
    method("divideAndRemainder(BigInteger)"),
    method("doubleValue()"),
    method("equals(Object)"),
    method("flipBit(int)"),
    method("floatValue()"),
    method("gcd(BigInteger)"),
    method("getLowestSetBit()"),
    method("hashCode()"),
    method("intValue()"),
    method(suppress, "isProbablePrime(int)", comment("nondeterministic probabilistic primality check")),
    method("longValue()"),
    method("max(BigInteger)"),
    method("min(BigInteger)"),
    method("mod(BigInteger)"),
    method("modInverse(BigInteger)"),
    method("modPow(BigInteger, BigInteger)"),
    method("multiply(BigInteger)"),
    method("negate()"),
    method(suppress, "nextProbablePrime()", comment("nondeterministic probabilistic primality check")),
    method("not()"),
    method("or(BigInteger)"),
    method("pow(int)"),
    method("remainder(BigInteger)"),
    method("setBit(int)"),
    method("shiftLeft(int)"),
    method("shiftRight(int)"),
    method("signum()"),
    method("subtract(BigInteger)"),
    method("testBit(int)"),
    method("toByteArray()"),
    method("toString()"),
    method("toString(int)"),
    method("xor(BigInteger)")))
