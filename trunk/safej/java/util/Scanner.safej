# auto-generated safej: default deny everything
class("java.util.Scanner",
  static(constructor(suppress, "Scanner(File)", comment("default deny")),
    constructor(suppress, "Scanner(File, String)", comment("default deny")),
    constructor(suppress, "Scanner(InputStream)", comment("default deny")),
    constructor(suppress, "Scanner(InputStream, String)", comment("default deny")),
    constructor(suppress, "Scanner(Readable)", comment("default deny")),
    constructor(suppress, "Scanner(ReadableByteChannel)", comment("default deny")),
    constructor(suppress, "Scanner(ReadableByteChannel, String)", comment("default deny")),
    constructor(suppress, "Scanner(String)", comment("default deny"))),
  instance(method(suppress, "close()", comment("default deny")),
    method(suppress, "delimiter()", comment("default deny")),
    method(suppress, "findInLine(Pattern)", comment("default deny")),
    method(suppress, "findInLine(String)", comment("default deny")),
    method(suppress, "findWithinHorizon(Pattern, int)", comment("default deny")),
    method(suppress, "findWithinHorizon(String, int)", comment("default deny")),
    method("hasNext()"),
    method(suppress, "hasNext(Pattern)", comment("default deny")),
    method(suppress, "hasNext(String)", comment("default deny")),
    method(suppress, "hasNextBigDecimal()", comment("default deny")),
    method(suppress, "hasNextBigInteger()", comment("default deny")),
    method(suppress, "hasNextBigInteger(int)", comment("default deny")),
    method(suppress, "hasNextBoolean()", comment("default deny")),
    method(suppress, "hasNextByte()", comment("default deny")),
    method(suppress, "hasNextByte(int)", comment("default deny")),
    method(suppress, "hasNextDouble()", comment("default deny")),
    method(suppress, "hasNextFloat()", comment("default deny")),
    method(suppress, "hasNextInt()", comment("default deny")),
    method(suppress, "hasNextInt(int)", comment("default deny")),
    method(suppress, "hasNextLine()", comment("default deny")),
    method(suppress, "hasNextLong()", comment("default deny")),
    method(suppress, "hasNextLong(int)", comment("default deny")),
    method(suppress, "hasNextShort()", comment("default deny")),
    method(suppress, "hasNextShort(int)", comment("default deny")),
    method(suppress, "ioException()", comment("default deny")),
    method(suppress, "locale()", comment("default deny")),
    method(suppress, "match()", comment("default deny")),
    method("next()"),
    method(suppress, "next(Pattern)", comment("default deny")),
    method(suppress, "next(String)", comment("default deny")),
    method(suppress, "nextBigDecimal()", comment("default deny")),
    method(suppress, "nextBigInteger()", comment("default deny")),
    method(suppress, "nextBigInteger(int)", comment("default deny")),
    method(suppress, "nextBoolean()", comment("default deny")),
    method(suppress, "nextByte()", comment("default deny")),
    method(suppress, "nextByte(int)", comment("default deny")),
    method(suppress, "nextDouble()", comment("default deny")),
    method(suppress, "nextFloat()", comment("default deny")),
    method(suppress, "nextInt()", comment("default deny")),
    method(suppress, "nextInt(int)", comment("default deny")),
    method(suppress, "nextLine()", comment("default deny")),
    method(suppress, "nextLong()", comment("default deny")),
    method(suppress, "nextLong(int)", comment("default deny")),
    method(suppress, "nextShort()", comment("default deny")),
    method(suppress, "nextShort(int)", comment("default deny")),
    method(suppress, "radix()", comment("default deny")),
    method(suppress, "remove()", comment("default deny")),
    method(suppress, "reset()", comment("default deny")),
    method(suppress, "skip(Pattern)", comment("default deny")),
    method(suppress, "skip(String)", comment("default deny")),
    method(suppress, "toString()", comment("default deny")),
    method(suppress, "useDelimiter(Pattern)", comment("default deny")),
    method(suppress, "useDelimiter(String)", comment("default deny")),
    method(suppress, "useLocale(Locale)", comment("default deny")),
    method(suppress, "useRadix(int)", comment("default deny"))))
