# Audited. Some tricky ones here.
class("java.lang.reflect.Method",
  honorary("org.joe_e.Powerless", "org.joe_e.Selfless"),
  instance(method("equals(Object)"),
    method("getAnnotation(Class<T>)"),
    method(suppress, "getDeclaredAnnotations()", comment("deny for now - ordering not specified")),
    method("getDeclaringClass()"),
    method("getDefaultValue()"),
    method(suppress, "getExceptionTypes()", comment("deny for now - ordering not specified")),
    method(suppress, "getGenericExceptionTypes()", comment("deny for now - ordering not specified")),
    method("getGenericParameterTypes()"),
    method("getGenericReturnType()"),
    method("getModifiers()"),
    method("getName()"),
    method(suppress, "getParameterAnnotations()", comment("deny for now - ordering of annotations not specified")),
    method("getParameterTypes()"),
    method("getReturnType()"),
    method("getTypeParameters()"),
    method(suppress, "hashCode()", comment("depends on potentially nondeterministic class name")),
    method(suppress, "invoke(Object, Object[])", comment("does not check that the method is public")),
    method("isBridge()"),
    method("isSynthetic()"),
    method("isVarArgs()"),
    method(suppress, "toGenericString()", comment("depends on potentially nondeterministic class name")),
    method(suppress, "toString()", comment("depends on potentially nondeterministic class name"))))
