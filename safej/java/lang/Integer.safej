# Manually audited: note the comment on valueOf
# Note that conversion from strings (except for decode) is not limited to
# ASCII digits and depends on Unicode digit mappings
class("java.lang.Integer",
  honorary("org.joe_e.Powerless", "org.joe_e.Selfless"),
  static(field("MAX_VALUE"),
    field("MIN_VALUE"),
    field("SIZE"),
    field("TYPE"),
    constructor("Integer(String)", comment("Unicode spec")),
    constructor("Integer(int)"),
    method("bitCount(int)"),
    method("decode(String)"),
    method(suppress, "getInteger(String)", comment("gets a system property")),
    method(suppress, "getInteger(String, Integer)", comment("gets a system property")),
    method(suppress, "getInteger(String, int)", comment("gets a system property")),
    method("highestOneBit(int)"),
    method("lowestOneBit(int)"),
    method("numberOfLeadingZeros(int)"),
    method("numberOfTrailingZeros(int)"),
    method("parseInt(String)", comment("Unicode spec")),
    method("parseInt(String, int)", comment("Unicode spec")),
    method("reverse(int)"),
    method("reverseBytes(int)"),
    method("rotateLeft(int, int)"),
    method("rotateRight(int, int)"),
    method("signum(int)"),
    method("toBinaryString(int)"),
    method("toHexString(int)"),
    method("toOctalString(int)"),
    method("toString(int)"),
    method("toString(int, int)"),
    method("valueOf(String)", comment("determinism may depend on non-Equatablity of Integer, Unicode spec")),
    method("valueOf(String, int)", comment("determinism may depend on non-Equatablity of Integer, Unicode spec")),
    method("valueOf(int)", comment("determinism may depend on non-Equatablity of Integer"))),
  instance(method("byteValue()"),
    method("compareTo(Integer)"),
    method("doubleValue()"),
    method("equals(Object)"),
    method("floatValue()"),
    method("hashCode()"),
    method("intValue()"),
    method("longValue()"),
    method("shortValue()"),
    method("toString()")))
