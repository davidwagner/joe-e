# Manually audited.  See the comments on valueOf.
# Constructors from string use Unicode's mapping of characters to values, rather than ASCII 0-9
class("java.math.BigDecimal",
  honorary("org.joe_e.Powerless", "org.joe_e.Selfless"),
  static(field("ONE"),
    field("ROUND_CEILING"),
    field("ROUND_DOWN"),
    field("ROUND_FLOOR"),
    field("ROUND_HALF_DOWN"),
    field("ROUND_HALF_EVEN"),
    field("ROUND_HALF_UP"),
    field("ROUND_UNNECESSARY"),
    field("ROUND_UP"),
    field("TEN"),
    field("ZERO"),
    constructor("BigDecimal(BigInteger)"),
    constructor("BigDecimal(BigInteger, MathContext)"),
    constructor("BigDecimal(BigInteger, int)"),
    constructor("BigDecimal(BigInteger, int, MathContext)"),
    constructor("BigDecimal(String)", comment("Unicode spec")),
    constructor("BigDecimal(String, MathContext)", comment("Unicode spec")),
    constructor("BigDecimal(char[])", comment("Unicode spec")),
    constructor("BigDecimal(char[], MathContext)", comment("Unicode spec")),
    constructor("BigDecimal(char[], int, int)", comment("Unicode spec")),
    constructor("BigDecimal(char[], int, int, MathContext)", comment("Unicode spec")),
    constructor("BigDecimal(double)"),
    constructor("BigDecimal(double, MathContext)"),
    constructor("BigDecimal(int)"),
    constructor("BigDecimal(int, MathContext)"),
    constructor("BigDecimal(long)"),
    constructor("BigDecimal(long, MathContext)"),
    method("valueOf(double)", comment("determinism may depend on BigDecimal being Selfless")),
    method("valueOf(long)", comment("determinism may depend on BigDecimal being Selfless")),
    method("valueOf(long, int)", comment("determinism may depend on BigDecimal being Selfless"))),
  instance(method("abs()"),
    method("abs(MathContext)"),
    method("add(BigDecimal)"),
    method("add(BigDecimal, MathContext)"),
    method("byteValueExact()"),
    method("compareTo(BigDecimal)"),
    method("divide(BigDecimal)"),
    method("divide(BigDecimal, MathContext)"),
    method("divide(BigDecimal, RoundingMode)"),
    method("divide(BigDecimal, int)"),
    method("divide(BigDecimal, int, RoundingMode)"),
    method("divide(BigDecimal, int, int)"),
    method("divideAndRemainder(BigDecimal)"),
    method("divideAndRemainder(BigDecimal, MathContext)"),
    method("divideToIntegralValue(BigDecimal)"),
    method("divideToIntegralValue(BigDecimal, MathContext)"),
    method("doubleValue()"),
    method("equals(Object)"),
    method("floatValue()"),
    method("hashCode()"),
    method("intValue()"),
    method("intValueExact()"),
    method("longValue()"),
    method("longValueExact()"),
    method("max(BigDecimal)"),
    method("min(BigDecimal)"),
    method("movePointLeft(int)"),
    method("movePointRight(int)"),
    method("multiply(BigDecimal)"),
    method("multiply(BigDecimal, MathContext)"),
    method("negate()"),
    method("negate(MathContext)"),
    method("plus()"),
    method("plus(MathContext)"),
    method("pow(int)"),
    method("pow(int, MathContext)"),
    method("precision()"),
    method("remainder(BigDecimal)"),
    method("remainder(BigDecimal, MathContext)"),
    method("round(MathContext)"),
    method("scale()"),
    method("scaleByPowerOfTen(int)"),
    method("setScale(int)"),
    method("setScale(int, RoundingMode)"),
    method("setScale(int, int)"),
    method("shortValueExact()"),
    method("signum()"),
    method("stripTrailingZeros()"),
    method("subtract(BigDecimal)"),
    method("subtract(BigDecimal, MathContext)"),
    method("toBigInteger()"),
    method("toBigIntegerExact()"),
    method("toEngineeringString()"),
    method("toPlainString()"),
    method("toString()"),
    method("ulp()"),
    method("unscaledValue()")))
